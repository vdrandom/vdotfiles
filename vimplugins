" support my own way of using plugins in vim / bash
autocmd BufRead *vimplugins set ft=vim
autocmd BufRead *bashplugins set ft=sh

" enable plugins
source ~/.vim/plugged/vim-plug/plug.vim
silent!call plug#begin('~/.vim/plugged')
" plugin manager for self updates
Plug 'junegunn/vim-plug'

" general plugins
Plug 'directionalWindowResizer'
Plug 'ervandew/supertab'
Plug 'jeetsukumaran/vim-buffergator'
Plug 'junegunn/vim-easy-align'
Plug 'mhinz/vim-signify'
Plug 'nvie/vim-togglemouse'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sleuth'
Plug 'vimwiki/vimwiki'

" IDE liek, per filetype
Plug 'neomake/neomake', { 'for': 'python' }
Plug 'davidhalter/jedi-vim', { 'for': 'python' }

" colorschemes
Plug 'lifepillar/vim-solarized8'

" syntax highlight plugins
Plug 'neilhwatson/vim_cf3'
Plug 'sheerun/vim-polyglot'
call plug#end()

" signify options
let g:signify_vcs_list=[ 'git', 'fossil' ]
let g:signify_sign_change='~'

" vim-togglemouse options
nmap <Leader>m <F12>

" easy-align options
xmap <Leader>a <Plug>(EasyAlign)
nmap <Leader>a <Plug>(EasyAlign)

" neomake
nmap <Leader>i :Neomake<CR>
let g:neomake_open_list = 7
let g:neomake_error_sign   = { 'text': 'e>', 'texthl': 'ErrorMsg' }
let g:neomake_warning_sign = { 'text': 'w>', 'texthl': 'WarningMsg' }
let g:neomake_info_sign    = { 'text': 'i>', 'texthl': 'InfoMsg' }
