" support my own way of using plugins in vim / bash
autocmd BufRead *vimplugins set ft=vim
autocmd BufRead *bashplugins set ft=sh

" enable plugins
source ~/.vim/plugged/vim-plug/plug.vim
silent!call plug#begin('~/.vim/plugged')
" plugin manager for self updates
Plug 'junegunn/vim-plug'

" general plugins
Plug 'directionalWindowResizer'        "resize windows with simple hotkeys
Plug 'jeetsukumaran/vim-buffergator'   "buffer management
Plug 'junegunn/vim-easy-align'         "aligning
Plug 'mhinz/vim-signify'               "version control system gutter info
Plug 'nvie/vim-togglemouse'            "hotkey to toggle mouse
Plug 'ctrlpvim/ctrlp.vim'              "fuzzy file search
Plug 'tpope/vim-fugitive'              "moar git awesomeness
Plug 'vimwiki/vimwiki'                 "vimwiki
Plug 'sheerun/vim-polyglot'            "syntax

" IDE liek, per filetype
Plug 'neomake/neomake', { 'for': 'python' }      "linter
Plug 'davidhalter/jedi-vim', { 'for': 'python' } "python support
Plug 'ervandew/supertab', { 'for': 'python' }    "TAB autocompletion

" colorschemes
Plug 'lifepillar/vim-solarized8'
Plug 'KeitaNakamura/neodark.vim'

" syntax highlight plugins
Plug 'neilhwatson/vim_cf3'
call plug#end()

" buffergator options
map <Leader><Tab> :BuffergatorToggle<CR>

" signify options
let g:signify_vcs_list=[ 'git', 'fossil' ]
let g:signify_sign_change='~'

" vim-togglemouse options
nmap <Leader>m <F12>

" easy-align options
xmap <Leader>a <Plug>(EasyAlign)
nmap <Leader>a <Plug>(EasyAlign)

" neomake
nmap <Leader>i :Neomake<CR>
let g:neomake_error_sign={
            \ 'text': 'e>',
            \ 'texthl': 'ErrorMsg',
            \ }
let g:neomake_warning_sign={
            \ 'text': 'w>',
            \ 'texthl': 'WarningMsg',
            \ }
let g:neomake_info_sign={
            \ 'text': 'i>',
            \ 'texthl': 'InfoMsg',
            \ }

if has('gui_running')
    colorscheme neodark
else
    colorscheme solarized8_light
endif
